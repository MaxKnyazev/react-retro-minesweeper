[{"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\index.js":"1","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\App\\index.js":"2","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\App\\App.js":"3","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Game\\index.js":"4","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Game\\Game.jsx":"5","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameField\\index.js":"6","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameField\\GameField.jsx":"7","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\data\\utils.js":"8","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameOver\\index.js":"9","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Settings\\index.js":"10","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameOver\\GameOver.jsx":"11","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Settings\\Settings.jsx":"12","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\data\\data.js":"13","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\MineCounter\\index.js":"14","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\MineCounter\\MineCounter.jsx":"15"},{"size":179,"mtime":1614180205184,"results":"16","hashOfConfig":"17"},{"size":45,"mtime":1614180180362,"results":"18","hashOfConfig":"17"},{"size":1017,"mtime":1616853355792,"results":"19","hashOfConfig":"17"},{"size":48,"mtime":1614179955949,"results":"20","hashOfConfig":"17"},{"size":437,"mtime":1618036701513,"results":"21","hashOfConfig":"17"},{"size":63,"mtime":1614180692080,"results":"22","hashOfConfig":"17"},{"size":5502,"mtime":1618036444500,"results":"23","hashOfConfig":"17"},{"size":6489,"mtime":1617815890070,"results":"24","hashOfConfig":"17"},{"size":60,"mtime":1616603763114,"results":"25","hashOfConfig":"17"},{"size":60,"mtime":1616604179626,"results":"26","hashOfConfig":"17"},{"size":230,"mtime":1616603744820,"results":"27","hashOfConfig":"17"},{"size":3581,"mtime":1617212787380,"results":"28","hashOfConfig":"17"},{"size":452,"mtime":1618036227608,"results":"29","hashOfConfig":"17"},{"size":69,"mtime":1618035201367,"results":"30","hashOfConfig":"17"},{"size":360,"mtime":1618036853781,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ueu1d7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\index.js",[],["64","65"],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\App\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\App\\App.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Game\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Game\\Game.jsx",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameField\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameField\\GameField.jsx",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\data\\utils.js",["66"],"// const widthGameField = 10;\r\n// const heightGameField = 10;\r\n// const quantityBombs = 20;\r\n\r\n// let gameField = [];\r\n\r\nexport const createGameField = (w, h) => {\r\n  let field = [];\r\n  for (let i = 0; i < w; i++) {\r\n    field[i] = [];\r\n  }\r\n\r\n  for (let i = 0; i < w; i++) {\r\n    for (let j = 0; j < h; j++) {\r\n      field[i][j] = '-';\r\n    }\r\n  }\r\n  return field;\r\n}\r\n\r\nconst printGameField = (field, w, h) => {\r\n  let s = ``;\r\n  for (let i = 0; i < w; i++) {\r\n    for (let j = 0; j < h; j++) {\r\n      s += `${field[i][j]}  `;\r\n    }\r\n    console.log(s)\r\n    s = '';\r\n  }\r\n}\r\n\r\nconst randomInteger = (min, max) => {\r\n  // случайное число от min до (max+1)\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\n// const fillGameFieldWithBombs = (field, w, h, quantity) => {\r\n//   let x, y, countBomb = 0;\r\n//   while (countBomb < quantity) {\r\n//     x = randomInteger(0, w - 1);\r\n//     y = randomInteger(0, h - 1);\r\n//     if(field[x][y] === 0) {\r\n//       field[x][y] = 9;\r\n//       countBomb += 1;\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const fillGameFieldWithBombs = (field, w, h, quantity, clickX, clickY) => {\r\n  // let field = JSON.parse(JSON.stringify(gF));\r\n  let bombX, bombY, countBomb = 0;\r\n  while (countBomb < quantity) {\r\n    bombX = randomInteger(0, w - 1);\r\n    bombY = randomInteger(0, h - 1);\r\n    if(field[bombX][bombY] === '-') {\r\n      if ((Math.abs(clickX - bombX) > 1)||(Math.abs(clickY - bombY) > 1)) {\r\n        field[bombX][bombY] = 9;\r\n        countBomb += 1;\r\n      }\r\n    }\r\n  }\r\n  return field;\r\n}\r\n\r\nexport const checkBombsAroundElement = (field, x, y, w, h) => {\r\n  let countBombsAroundElement = 0;\r\n  if ((x-1 >= 0)&&(y-1 >= 0)) { \r\n    if (field[x-1][y-1] === 9) { \r\n      countBombsAroundElement += 1; \r\n    } \r\n  }\r\n\r\n  if (y-1 >= 0) {\r\n    if (field[x][y-1] === 9) {\r\n      countBombsAroundElement += 1; \r\n    }\r\n  }\r\n\r\n  if ((x+1 < w)&&(y-1 >= 0)) {\r\n    if (field[x+1][y-1] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n\r\n  if (x-1 >= 0) {\r\n    if (field[x-1][y] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n\r\n  if (x+1 < w) {\r\n    if (field[x+1][y] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n\r\n  if ((x-1 >= 0)&&(y+1 < h)) {\r\n    if (field[x-1][y+1] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n  \r\n  if (y+1 < h) {\r\n    if (field[x][y+1] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n  \r\n  if ((x+1 < w)&&(y+1 < h)) {\r\n    if (field[x+1][y+1] === 9) {\r\n      countBombsAroundElement += 1;\r\n    }\r\n  }\r\n\r\n  return countBombsAroundElement;\r\n}\r\n\r\n// const fillGameFieldWithNumbers = (field, w, h) => {\r\n//   for (let i = 0; i < w; i++) {\r\n//     for (let j = 0; j < h; j++) {\r\n//       if (field[i][j] === '-') {\r\n//         field[i][j] = checkBombsAroundElement(field, i, j, w, h)\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst convertStringToArray = (s = '', char) => {\r\n  return s.split(char).map(elem => +elem);\r\n}\r\n\r\nexport const renderEmptyElement = (field, w, h, x, y) => {\r\n  let setOneStep = new Set();\r\n  field[x][y] = 0;\r\n  setOneStep.add(`${x}:${y}`);\r\n\r\n  for (let item of setOneStep) {\r\n    [x, y] = convertStringToArray(item, ':');\r\n    // console.log(`${x}, ${y}`) \r\n\r\n    if ((x-1 >= 0)&&(y-1 >= 0)) {\r\n      field[x-1][y-1] = checkBombsAroundElement(field, x-1, y-1, w, h);\r\n      if (field[x-1][y-1] === 0) {\r\n        setOneStep.add(`${x-1}:${y-1}`);\r\n      }\r\n    }\r\n  \r\n    if (y-1 >= 0) {\r\n      field[x][y-1] = checkBombsAroundElement(field, x, y-1, w, h);\r\n      if (field[x][y-1] === 0) {\r\n        setOneStep.add(`${x}:${y-1}`);\r\n      }\r\n    }\r\n  \r\n    if ((x+1 < w)&&(y-1 >= 0)) {\r\n      field[x+1][y-1] = checkBombsAroundElement(field, x+1, y-1, w, h);\r\n      if (field[x+1][y-1] === 0) {\r\n        setOneStep.add(`${x+1}:${y-1}`);\r\n      }\r\n    }\r\n  \r\n    if (x-1 >= 0) {\r\n      field[x-1][y] = checkBombsAroundElement(field, x-1, y, w, h);\r\n      if (field[x-1][y] === 0) {\r\n        setOneStep.add(`${x-1}:${y}`);\r\n      }\r\n    }\r\n  \r\n    if (x+1 < w) {\r\n      field[x+1][y] = checkBombsAroundElement(field, x+1, y, w, h);\r\n      if (field[x+1][y] === 0) {\r\n        setOneStep.add(`${x+1}:${y}`);\r\n      } \r\n    }\r\n  \r\n    if ((x-1 >= 0)&&(y+1 < h)) {\r\n      field[x-1][y+1] = checkBombsAroundElement(field, x-1, y+1, w, h);\r\n      if (field[x-1][y+1] === 0) {\r\n        setOneStep.add(`${x-1}:${y+1}`);\r\n      } \r\n    }\r\n    \r\n    if (y+1 < h) {\r\n      field[x][y+1] = checkBombsAroundElement(field, x, y+1, w, h);\r\n      if (field[x][y+1] === 0) {\r\n        setOneStep.add(`${x}:${y+1}`);\r\n      }\r\n    }\r\n    \r\n    if ((x+1 < w)&&(y+1 < h)) {\r\n      field[x+1][y+1] = checkBombsAroundElement(field, x+1, y+1, w, h);\r\n      if (field[x+1][y+1] === 0) {\r\n        setOneStep.add(`${x+1}:${y+1}`);\r\n      }\r\n    }\r\n\r\n    // console.log(`${x}, ${y}`);\r\n    // console.log(setOneStep);\r\n  }\r\n\r\n  return field;\r\n}\r\n\r\nexport const gameOverDefeat = (field, w, h) => {\r\n  for (let i = 0; i < w; i++) {\r\n    for (let j = 0; j < h; j++) {\r\n      if (field[i][j] === '-') {\r\n        field[i][j] = checkBombsAroundElement(field, i, j, w, h)\r\n      }\r\n\r\n      // if (field[i][j] === '9') {\r\n\r\n      // }\r\n    }\r\n  }\r\n}\r\n\r\nexport const isItVictory = (field, w, h) => {\r\n  let countEmptyElements = 0;\r\n  for (let i = 0; i < w; i++) {\r\n    for (let j = 0; j < h; j++) {\r\n      if (field[i][j] === '-') {\r\n        countEmptyElements += 1;\r\n      }\r\n    }\r\n  }\r\n  return !countEmptyElements;\r\n}\r\n\r\n// const compareGameFieldWithTestField = (field, testField, w, h) => {\r\n//   for (let i = 0; i < w; i++) {\r\n//     for (let j = 0; j < h; j++) {\r\n//       if (field[i][j] !== testField[i][j]) {\r\n//         return false;\r\n//       }\r\n//     }\r\n//   }\r\n//   return true;\r\n// }\r\n\r\n\r\n\r\n// createGameField(gameField, widthGameField, heightGameField);\r\n// fillGameFieldWithBombs(gameField, widthGameField, heightGameField, quantityBombs, 2, 2);\r\n// fillGameFieldWithNumbers(gameField, widthGameField, heightGameField);\r\n// printGameField(gameField, widthGameField, heightGameField);\r\n\r\n// gameField = [\r\n//   [9, 1, 0, 1, 9],\r\n//   [1, 1, 0, 1, 1],\r\n//   [0, 0, 0, 0, 0],\r\n//   [1, 1, 0, 1, 1],\r\n//   [9, 1, 0, 1, 9]\r\n// ];\r\n// console.log(gameField[2][0])\r\n// renderEmptyElement(gameField, 2, 2, widthGameField, heightGameField);\r\n// printGameField(gameField, widthGameField, heightGameField);\r\n\r\n// renderEmptyElement(gameField, 1, 2, widthGameField, heightGameField);\r\n// printGameField(gameField, widthGameField, heightGameField);","D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameOver\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Settings\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\GameOver\\GameOver.jsx",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\Settings\\Settings.jsx",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\data\\data.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\MineCounter\\index.js",[],"D:\\__GithubMax--Portfolio\\react-retro-minesweeper\\src\\components\\MineCounter\\MineCounter.jsx",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":21},{"ruleId":"72","severity":1,"message":"76","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":12},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'printGameField' is assigned a value but never used.","Identifier","unusedVar","'data' is defined but never used.","no-global-assign","no-unsafe-negation"]